# -*- coding: utf-8 -*-
"""plant_disease_detect.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VACtllwndWk2-mvIrPa0UsXvhNF4JpV6
"""

from google.colab import drive

drive.mount('/content/gdrive/', force_remount=True)

import numpy as np
import cv2
import os

def show(img):
    cv2.imshow("frame",img)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

X_train = []
y_train = []
for category in os.listdir("/content/gdrive/MyDrive/plant_disease_detect_dataset/New Plant Diseases Dataset(Augmented)/Train"):
    for image_name in os.listdir(f"/content/gdrive/MyDrive/plant_disease_detect_dataset/New Plant Diseases Dataset(Augmented)/Train/{category}"):
        img = cv2.imread(f"/content/gdrive/MyDrive/plant_disease_detect_dataset/New Plant Diseases Dataset(Augmented)/Train/{category}/{image_name}")
        img = cv2.resize(img, (100, 100))
        img = np.array(img)
        img = img.astype("float32")
        img /= 255
        gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
        X_train.append(gray)
        if category.split("_")[-1] == "healthy":
            y_train.append(1)
        else:
            y_train.append(0)

print(len(X_train), len(y_train))

X_test = []
y_test = []
for category in os.listdir("/content/gdrive/MyDrive/plant_disease_detect_dataset/New Plant Diseases Dataset(Augmented)/Test"):
    for image_name in os.listdir(f"/content/gdrive/MyDrive/plant_disease_detect_dataset/New Plant Diseases Dataset(Augmented)/Test/{category}"):
        img = cv2.imread(f"/content/gdrive/MyDrive/plant_disease_detect_dataset/New Plant Diseases Dataset(Augmented)/Test/{category}/{image_name}")
        img = cv2.resize(img, (100, 100))
        img = np.array(img)
        img = img.astype("float32")
        img /= 255
        gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
        X_test.append(gray)
        if category.split("_")[-1] == "healthy":
            y_test.append(1)
        else:
            y_test.append(0)

print(len(X_test), len(y_test))

X_train = np.array(X_train)
X_test = np.array(X_test)
y_train = np.array(y_train)
y_test = np.array(y_test)

X_train = X_train.reshape(-1, 100, 100, 1)
X_test = X_test.reshape(-1, 100, 100, 1)

import tensorflow as tf
from tensorflow import keras

tf.config.list_physical_devices('GPU')

model = keras.Sequential([
    keras.layers.Conv2D(100, (3, 3), activation="relu", input_shape=(100, 100, 1)),
    keras.layers.Conv2D(150, (3, 3), activation="relu"),
    keras.layers.MaxPooling2D((2, 2)),
    keras.layers.Conv2D(100, (3, 3), activation="relu"),
    keras.layers.Conv2D(150, (3, 3)),
    keras.layers.MaxPooling2D((2, 2)),
    keras.layers.Flatten(),
    keras.layers.Dense(150, activation="relu"),
    keras.layers.Dense(200, activation="relu"),
    keras.layers.Dense(1, activation="sigmoid")
])

model.summary()

model.compile(optimizer="adam", loss="binary_crossentropy", metrics=["accuracy"])

hist = model.fit(X_train, y_train, epochs=10)

model.evaluate(X_test, y_test)

model.save("dl_model_2.h5")

